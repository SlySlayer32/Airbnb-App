{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Git: Fetch",
            "type": "shell",
            "command": "git fetch origin",
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": []
        },
        {
            "label": "Git: Pull (rebase)",
            "type": "shell",
            "command": "git pull --rebase origin ${input:branch}",
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": []
        },
        {
            "label": "Git: Stash WIP",
            "type": "shell",
            "command": "git",
            "args": ["stash", "push", "-m", "WIP from VS Code task"],
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": []
        },
        {
            "label": "Install Dependencies",
            "type": "shell",
            "command": "npm install",
            "presentation": {
                "reveal": "always"
            },
            "problemMatcher": []
        },
        {
            "label": "Typecheck (tsc)",
            "type": "shell",
            "command": "npx tsc --noEmit",
            "presentation": {
                "reveal": "always"
            },
            "problemMatcher": [
                "$tsc"
            ]
        },
        {
            "label": "Lint (eslint)",
            "type": "shell",
            "command": "npx eslint .",
            "presentation": {
                "reveal": "always"
            },
            "problemMatcher": [
                "$eslint-stylish"
            ]
        },
        {
            "label": "Start Dev Server",
            "type": "shell",
            "command": "npm start",
            "presentation": {
                "reveal": "always"
            },
            "isBackground": true,
            "problemMatcher": []
        },
        {
            "label": "Expo: Start Android",
            "type": "shell",
            "command": "npm run android",
            "presentation": {
                "reveal": "always"
            },
            "isBackground": true,
            "problemMatcher": []
        },
        {
            "label": "Expo: Start iOS",
            "type": "shell",
            "command": "npm run ios",
            "presentation": {
                "reveal": "always"
            },
            "isBackground": true,
            "problemMatcher": []
        },
        {
            "label": "Expo: Start Web",
            "type": "shell",
            "command": "npm run web",
            "presentation": {
                "reveal": "always"
            },
            "isBackground": true,
            "problemMatcher": []
        },
            {
                "label": "Dev: All Checks",
                "dependsOn": [
                    "Start Dev Server",
                    "Typecheck (tsc)",
                    "Lint (eslint)"
                ],
                "dependsOrder": "sequence",
                "group": "build",
                "presentation": {
                    "reveal": "always"
                }
            },
        {
            "label": "Clean Install",
            "type": "process",
            "command": "cmd",
            "args": [
                "/c",
                "if exist \"node_modules\" rd /s /q \"node_modules\" & if exist \"package-lock.json\" del /f \"package-lock.json\" & npm install"
            ],
            "presentation": {
                "reveal": "always"
            },
            "problemMatcher": []
        },
        {
            "label": "Sync & Verify",
            "dependsOn": [
                "Git: Stash WIP",
                "Git: Fetch",
                "Git: Pull (rebase)",
                "Install Dependencies",
                "Typecheck (tsc)",
                "Lint (eslint)"
            ],
            "dependsOrder": "sequence"
        }
    ],
    "inputs": [
        {
            "id": "branch",
            "type": "promptString",
            "description": "Branch to pull from (default: main)",
            "default": "main"
        }
    ]
}